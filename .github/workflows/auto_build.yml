name: Auto Build

on:
  schedule:
    - cron: 0 6 * * *
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - userName: muxd93
            repoName: TVBoxOS_XD
            branchName: main
          - userName: muxd93
            repoName: TVBox_takagen99
            branchName: main
          - userName: q215613905
            repoName: TVBoxOS
            branchName: main
          - userName: takagen99
            repoName: Box
            branchName: main
          - userName: XiaoRanLiu3119
            repoName: TVBoxOS-Mobile
            branchName: main
          - userName: FongMi
            repoName: TV
            branchName: release
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check New Commit
        run: |
          upStream=https://github.com/${{ matrix.userName }}/${{ matrix.repoName }}
          echo "upStream=$upStream" >> $GITHUB_ENV
          commit=$(curl -sL $upStream/commits/${{ matrix.branchName }} |grep -o '/${{ matrix.userName }}/${{ matrix.repoName }}/commit/[a-z0-9]\+' |head -1 | cut -d\/ -f5)
          if ! git log --oneline |grep -q "$commit"; then
            echo "commit=$commit" >> $GITHUB_ENV
            echo "commitS=${commit:0:7}" >> $GITHUB_ENV
          fi

      - name: Checkout Source Code and Zip
        if: ${{ env.commit }}
        run: |
          git clone ${{ env.upStream }} Apk_Build_${{ matrix.repoName }}
          cd Apk_Build_${{ matrix.repoName }}
          git checkout ${{ env.commit }}
          echo "tag=$(git log --date=format:'%Y%m%d-%H%M' --pretty=format:%cd ${{ env.commitS }} -1)" >> $GITHUB_ENV
      - name: Compress Source Code
        if: ${{ env.commit }}
        working-directory: Apk_Build_${{ matrix.repoName }}
        run: |
          zip -q -x ".git/*" -r source-${{ env.commitS }}.zip .

      - name: Release Apk Sign
        if: ${{ env.commit }}
        working-directory: Apk_Build_${{ matrix.repoName }}
        run: |
          signingConfigs='ICAgIHNpZ25pbmdDb25maWdzIHtcCiAgICAgICAgaWYgKHByb2plY3QuaGFzUHJvcGVydHkoIlJFTEVBU0VfU1RPUkVfRklMRSIpKSB7XAogICAgICAgICAgICBteUNvbmZpZyB7XAogICAgICAgICAgICAgICAgc3RvcmVGaWxlIGZpbGUoUkVMRUFTRV9TVE9SRV9GSUxFKVwKICAgICAgICAgICAgICAgIHN0b3JlUGFzc3dvcmQgUkVMRUFTRV9TVE9SRV9QQVNTV09SRFwKICAgICAgICAgICAgICAgIGtleUFsaWFzIFJFTEVBU0VfS0VZX0FMSUFTXAogICAgICAgICAgICAgICAga2V5UGFzc3dvcmQgUkVMRUFTRV9LRVlfUEFTU1dPUkRcCiAgICAgICAgICAgICAgICB2MVNpZ25pbmdFbmFibGVkIHRydWVcCiAgICAgICAgICAgICAgICB2MlNpZ25pbmdFbmFibGVkIHRydWVcCiAgICAgICAgICAgICAgICBlbmFibGVWM1NpZ25pbmcgPSB0cnVlXAogICAgICAgICAgICAgICAgZW5hYmxlVjRTaWduaW5nID0gdHJ1ZVwKICAgICAgICAgICAgfVwKICAgICAgICB9XAogICAgfVwKXA=='
          signingConfig='ICAgICAgICAgICAgaWYgKHByb2plY3QuaGFzUHJvcGVydHkoIlJFTEVBU0VfU1RPUkVfRklMRSIpKSB7XAogICAgICAgICAgICAgICAgc2lnbmluZ0NvbmZpZyBzaWduaW5nQ29uZmlncy5teUNvbmZpZ1wKICAgICAgICAgICAgfVwK'
          signingConfigs="$(echo "$signingConfigs" |base64 -d )"
          signingConfig="$(echo "$signingConfig" |base64 -d )"
          sed -i -e "/defaultConfig {/i\\$signingConfigs " -e "/releaseCommon {/a\\$signingConfig " -e "/debug {/a\\$signingConfig " -e "/release {/a\\$signingConfig " app/build.gradle
          cp -f ${{ github.workspace }}/.github/workflows/TVBoxOSC.jks app/TVBoxOSC.jks
          sed -i '$a\RELEASE_STORE_FILE=./TVBoxOSC.jks'     ./gradle.properties
          sed -i '$a\RELEASE_KEY_ALIAS=TVBoxOSC'            ./gradle.properties
          sed -i '$a\RELEASE_STORE_PASSWORD=TVBoxOSC'       ./gradle.properties
          sed -i '$a\RELEASE_KEY_PASSWORD=TVBoxOSC'         ./gradle.properties
      - name: Update Version Code
        if: ${{ env.commit && (matrix.repoName == 'TVBox_takagen99') }}
        working-directory: Apk_Build_${{ matrix.repoName }}
        run: |
          versionCode=$(grep -o '"versionCode": [0-9]*' ${{ github.workspace }}/tk_version.json | awk '{print $2}')
          newVersionCode=$((versionCode + 1))
          echo "newVersionCode=$newVersionCode" >> $GITHUB_ENV
          echo "newVersionCode is ${{ env.newVersionCode }}"
          echo "lastVersionCode is $versionCode and newVersionCode is $newVersionCode "
          sed -i "s#versionCode [0-9]*#versionCode $newVersionCode#" app/build.gradle
          sed -i 's#"versionCode": [0-9]*#"versionCode": $newVersionCode#g' ${{ github.workspace }}/tk_version.json
          sed -i 's#"buildRepoName": "[^"]*"#"buildRepoName": "${{ github.repository }}"#g' ${{ github.workspace }}/tk_version.json
          sed -i 's#"repoUserName": "[^"]*"#"repoUserName": "${{ matrix.userName }}"#g' ${{ github.workspace }}/tk_version.json
          sed -i 's#"repoName": "[^"]*"#"repoName": "${{ matrix.repoName }}"#g' ${{ github.workspace }}/tk_version.json
          sed -i 's#"repoTag": "[^"]*"#"repoTag": "${{ env.tag }}"#g' ${{ github.workspace }}/tk_version.json
          sed -i 's#"desc": "[^"]*"#"desc": "${{ matrix.repoName }}"#g' ${{ github.workspace }}/tk_version.json
      - name: Draft Release Note
        if: ${{ env.commit }}
        working-directory: Apk_Build_${{ matrix.repoName }}
        run: |
          rm -rf apk/
          mkdir -p apk/
          lastCommit=$(grep "${{ matrix.userName }}\/${{ matrix.repoName }}" ${{ github.workspace }}/README.md |grep -o '[a-z0-9]\{40\}')
          export LESSCHARSET=utf-8
          if [ "${{ env.commit }}" == "${lastCommit}" ]; then
            releaseNote=`git log --pretty=format:%B ${{ env.commitS }} -1 |sed -e "s# \{2,\}#\n#g" -e "/^Merge \(pull\|branch\|remote\)/d" -e '/^$/d' |cat -n |sort -k2,2 -k1,1n |uniq -f1 |sort -k1,1n |cut -f2-`
          else
            releaseNote=`git log --pretty=format:%B ${{ env.commitS }}...${lastCommit:0:7} |sed -e "s# \{2,\}#\n#g" -e "/^Merge \(pull\|branch\|remote\)/d" -e '/^$/d' |cat -n |sort -k2,2 -k1,1n |uniq -f1 |sort -k1,1n |cut -f2-`
          fi
          echo "Draft Release Note is \n$releaseNote"
          echo $releaseNote > apk/${{ matrix.userName }}-Release.log
      - name: Setup Gradle
        if: ${{ env.commit }}
        uses: gradle/gradle-build-action@v2
      - name: Build Release With Gradle
        if: ${{ env.commit }}
        working-directory: Apk_Build_${{ matrix.repoName }}
        run: |
          chmod +x gradlew
          ./gradlew assembleRelease --build-cache --parallel --daemon --warning-mode all
      - name: Build Common With Gradle
        if: ${{ env.commit && (matrix.repoName == 'TVBox_takagen99') }}
        working-directory: Apk_Build_${{ matrix.repoName }}
        run: |
          chmod +x gradlew
          ./gradlew assembleReleaseCommon --build-cache --parallel --daemon --warning-mode all
      - name: Prepare App For TVBox_takagen99
        if: ${{ env.commit && (matrix.repoName == 'TVBox_takagen99') }}
        working-directory: Apk_Build_${{ matrix.repoName }}
        run: |
          releaseAPk=`find app/build/outputs/apk/release -name "*.apk" -print`
          mv "$releaseAPk" apk/${{ matrix.repoName }}_${{ matrix.userName }}_${{ env.tag }}_release.apk
          releaseCommonAPk=`find app/build/outputs/apk/releaseCommon -name "*.apk" -print`
          mv "$releaseCommonAPk" apk/${{ matrix.repoName }}_${{ matrix.userName }}_${{ env.tag }}_releaseCommon.apk
      - name: Prepare App
        if: ${{ env.commit && !(matrix.repoName == 'TVBox_takagen99') }}
        working-directory: Apk_Build_${{ matrix.repoName }}
        run: |
          i=1
          for file in `find ~ -name "*.apk" -print`; do
            echo "i = $i, file name is $file"
            mv "$file" apk/${{ matrix.repoName }}_${{ matrix.userName }}_${{ env.tag }}_Release_$i.apk
            i=$((i + 1))
          done
      - name: Release Note
        if: ${{ env.commit }}
        working-directory: Apk_Build_${{ matrix.repoName }}
        run: |
          lastCommit=$(grep "${{ matrix.userName }}\/${{ matrix.repoName }}" ${{ github.workspace }}/README.md |grep -o '[a-z0-9]\{40\}')
          export LESSCHARSET=utf-8
          echo -e "Credit: [${{ matrix.userName }}_${{ matrix.repoName }}](${{ env.upStream }})\nCommit: ${{ env.commit }}\nChangelog:" > apk/${{ matrix.userName }}-Release.log
          if [ "${{ env.commit }}" == "${lastCommit}" ]; then
            git log --pretty=format:%B ${{ env.commitS }} -1 |sed -e "s# \{2,\}#\n#g" -e "/^Merge \(pull\|branch\|remote\)/d" -e '/^$/d' |cat -n |sort -k2,2 -k1,1n |uniq -f1 |sort -k1,1n |cut -f2- >> apk/${{ matrix.userName }}-Release.log
          else
            git log --pretty=format:%B ${{ env.commitS }}...${lastCommit:0:7} |sed -e "s# \{2,\}#\n#g" -e "/^Merge \(pull\|branch\|remote\)/d" -e '/^$/d' |cat -n |sort -k2,2 -k1,1n |uniq -f1 |sort -k1,1n |cut -f2- >> apk/${{ matrix.userName }}-Release.log
          fi
      - name: Release and Upload Assets(release area)
        uses: softprops/action-gh-release@v1
        if: ${{ env.commit }}
        with:
          name: ${{ env.tag }}
          tag_name: ${{ matrix.userName }}_${{ matrix.repoName }}_${{ env.tag }}
          body_path: Apk_Build_${{ matrix.repoName }}/apk/${{ matrix.userName }}-Release.log
          files: |
            Apk_Build_${{ matrix.repoName }}/apk/*
            Apk_Build_${{ matrix.repoName }}/source-${{ env.commitS }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Push to master
        if: ${{ env.commit }}
        run: |
          sed -i '/url =/d' ./.git/config
          git config --local user.name "github-actions[bot]"
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git remote set-url --add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git pull --rebase
          sed -i "/${{ matrix.userName }}\/${{ matrix.repoName }}/s#Updated: [a-zA-Z0-9]*#Updated: ${{ env.commit }}#" README.md
          rm -rf Apk_Build_${{ matrix.repoName }}
          git add --all
          git commit -m "${{ matrix.repoName }}_${{ matrix.userName }}_${{ env.tag }}_${{ env.commit }}"
          git push -u -f origin main
